services:
  postgres: 
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgrespass
    ports:
      - 5432:5432
    volumes:
        - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 3
  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopass
    ports:
      - 27017:27017
    volumes:
      - mongodata:/data/db
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--quiet",
          "127.0.0.1/test",
          "--eval",
          "'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 40s
  rabbitmq: 
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      # test: ["CMD", "curl", "-f", "http://localhost:5672"]
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 5
  auction-svc:
    image: youssefhikal/auction-svc:latest
    build: 
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development  
      - ASPNETCORE_URLS=http://+80
      - ASPNETCORE_URLS=http://+7777
      - Rabbitmq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespass;Database=Auction;
      - IdentityServiceUrl=http://identity-svc
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=http://+:80
    ports:
      - 7001:80
      - 7777:7777
    depends_on: 
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  search-svc:
    image: youssefhikal/search-svc:latest
    build: 
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development  
      - ASPNETCORE_URLS=http://+80
      - Rabbitmq__Host=rabbitmq
      - ConnectionStrings__MongoDbConnection=mongodb://root:mongopass@mongodb:27017/
      - AuctionServiceUrl=http://auction-svc
    ports:
      - 7002:80
    depends_on: 
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  identity-svc:
    image: youssefhikal/identity-svc:latest
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile 
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+80
      - IssuerUri=http://id.mazad.se
      - ClientApp=http://app.mazad.se
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespass;Database=Identity
      - VIRTUAL_HOST=id.mazad.se
    depends_on: 
      postgres:
        condition: service_healthy
  gateway-svc:
    image: youssefhikal/gateway-svc:latest
    build:
      context: .
      dockerfile: src/GatewayService/Dockerfile 
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+80
      - ClientApp=http://app.mazad.se
      - VIRTUAL_HOST=api.mazad.se
    ports:
      - 6001:80
  bid-svc:
    image: youssefhikal/bid-svc:latest
    build: 
      context: .
      dockerfile: src/BiddingService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development  
      - ASPNETCORE_URLS=http://+80
      - Rabbitmq__Host=rabbitmq
      - ConnectionStrings__BidDbConnection=mongodb://root:mongopass@mongodb:27017/
      - IdentityServiceUrl=http://identity-svc
      - GrpcAuction=http://auction-svc:7777
    ports:
      - 7003:80
    depends_on: 
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  notify-svc:
    image: youssefhikal/notify-svc:latest
    build: 
      context: .
      dockerfile: src/NotificationService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development  
      - ASPNETCORE_URLS=http://+80
      - Rabbitmq__Host=rabbitmq
    ports:
      - 7004:80
    depends_on: 
      rabbitmq:
        condition: service_healthy
  web-app:
    image: youssefhikal/web-app:latest
    build: 
      context: .
      dockerfile: frontend/web-app/Dockerfile
    volumes:
      - /var/lib/web/data
    environment:
      - AUTH_SECRET=z8ANsttew9VcqYRt7SL7sYIvkkT1Ie5u6YI2yKHT9PQ=
      - API_URL=http://gateway-svc/
      - ID_URL=http://id.mazad.se
      - ID_URL_INTERNAL=http://identity-svc
      - AUTH_URL=http://app.mazad.se
      - AUTH_URL_INTERNAL=http://web-app:3000
      - VIRTUAL_HOST=app.mazad.se
      - VIRTUAL_PORT=3000
    ports:
      - 3000:3000
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./devcerts:/etc/nginx/certs
volumes:
  pgdata:
  mongodata: